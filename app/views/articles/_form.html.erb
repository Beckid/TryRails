<%# form_for is a convenient way to create form for certain object. This form can be identified by the object called :article, and this object has two fields, :title and :content %>
<%# The url option of the form builder help is turned on. It will redirect the routes to the path of articles controller. In other word, after this form is being submitted, the page will be re-directed to the index action of the articles controller. %>
<%# Notice, articles_path is defined in the path helper of articles. It tells Rails to re-direct to the URI pattern of the articles path. Therefore, by default, the form will be submitted by a POST request to the articles path. After that, the create action of the articles controller will handle the information submitted. %>
<%= form_for @article do |ft| %>
	<% if @article.errors.any? %>
		<%# Rails automatically wraps fields that contain an error with a div with class field_with_errors. You can define a CSS rule to it. %>
		<div style="color: red;">
			<%# pluralize helper can automatically pluralize a string if count > 1. %>
			<h3><%= pluralize(@article.errors.count, "error") %> prohibited this article from being saved:</h3>
			<ul>
				<%# print each error. %>
				<% @article.errors.full_messages.each do |i| %>
					<li><%= i %></li>
				<% end %>
			</ul>
		</div>
	<% end %>
	<p>
		<%= ft.label :title %><br>
		<%= ft.text_field :title %>
	</p>

	<p>
		<%# The label and the input share the same id. %>
		<%= ft.label :content %><br>
		<%= ft.text_area :content %>
	</p>

	<p>
		<%= ft.submit %>
	</p>
<% end %>

<%= link_to 'Back to All articles', articles_path %>